# Enable Developer Mode
reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" /t REG_DWORD /f /v "AllowDevelopmentWithoutDevLicense" /d "1"
# .\gpupdate.exe /Force

Update-Help
Update-ExecutionPolicy Unrestricted

# Install Chocolatey
# iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

# cinst -y Boxstarter

cinst -y Microsoft-Hyper-V-All -source windowsFeatures

# Packages
cinst -y hyper

# Activate Windows linux subsystem
Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux -NoRestart
Enable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform -NoRestart

if (Test-PendingReboot) { Invoke-Reboot }

# Upgrade to WSL
cinst -y wsl

if (Test-PendingReboot) { Invoke-Reboot }

## Git
cinst -y git.install
cinst -y poshgit

# Restart PowerShell / CMDer before moving on - or run
$env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")

cinst -y Git-Credential-Manager-for-Windows
cinst -y github

## Node, npm
cinst -y nodejs.install

## Development Tools
cinst -y vscode
# if (Test-PendingReboot) { Invoke-Reboot }
# cinst -y visualstudio2019community --package-parameters "--add Microsoft.VisualStudio.Workload.Azure --add Microsoft.VisualStudio.Workload.Python --add Microsoft.VisualStudio.Workload.Node --add Microsoft.VisualStudio.Workload.NetWeb --add Microsoft.VisualStudio.Workload.NetCoreTools --add Microsoft.VisualStudio.Workload.DataScience --passive --locale en-US"
# if (Test-PendingReboot) { Invoke-Reboot }
# cinst -y sql-server-management-studio
#if (Test-PendingReboot) { Invoke-Reboot }

## VSCode Extensions
cinst -y vscode-csharp
cinst -y vscode-ruby
cinst -y vscode-docker
cinst -y vscode-python
cinst -y vscode-java
cinst -y vscode-spring-initializr
cinst -y vscode-spring-boot
cinst -y vscode-drawio
cinst -y vscode-gitignore
cinst -y vscode-powershell

# Alpine Linux
cinst -y wsl-alpine


if (Test-PendingReboot) { Invoke-Reboot }


## Common Languages: Java, Ruby, Go, Python
cinst -y openjdk
cinst -y dotnet-sdk
cinst -y dotnetcore-sdk
cinst -y ruby
cinst -y ruby.devkit
cinst -y python

if (Test-PendingReboot) { Invoke-Reboot }

## Basics
cinst -y 7zip.install
cinst -y sysinternals
cinst -y powertoys
cinst -y 1password4
cinst -y postman

if (Test-PendingReboot) { Invoke-Reboot }

## Cloud CLI
cinst -y awscli
cinst -y awstools.powershell
cinst -y azure-cli

## Docker to build containers
cinst -y docker-for-windows

## Add Kubernetes
cinst -y kubernetes-cli
cinst -y kubernetes-helm
cinst -y minikube

## Updates
npm install -g npm-windows-upgrade

## Add domain user to docker group
$currentUser = $(Get-WMIObject -class Win32_ComputerSystem | select username).username
Write-Host "Adding domain user '$currentUser' to local 'docker-users' group."
Add-LocalGroupMember -Group "docker-users" -Member $currentUser

## Windows Services
Set-Service ssh-agent -StartupType Automatic
Start-Service ssh-agent 

## Restart
Restart-Computer
